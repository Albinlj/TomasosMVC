@using Microsoft.AspNetCore.Identity
@using ASPNetCoreIdentity.Models
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@*@inject RoleManager<IdentityRole> RoleManager*@
@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li class="nav-item btn">
                <a class="nav-item text-dark" asp-area="" asp-controller="Account" asp-action="Edit" title="Manage">Welcome @UserManager.GetUserName(User)!</a>
            </li>
            <li class="nav-item">
                <button type="submit" class="btn btn-link navbar-btn navbar-link text-dark">Log out</button>
            </li>
            @if (User.IsInRole(Roles.Administrator.ToString()))
            {
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="Index">Admin Panel</a>
                </li>
            }
        </ul>
    </form>
}
else
{
    <li class="nav-item btn"><a class="text-dark" asp-area="" asp-controller="Account" asp-action="Register">Register</a></li>
    <li class="nav-item btn"><a class="text-dark" asp-area="" asp-controller="Account" asp-action="Login">Log in</a></li>
}